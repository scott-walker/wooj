FROM php:8.4-fpm

RUN apt-get update && apt-get install -y \
    build-essential \
    zlib1g-dev \
    nginx \
    curl \
    gnupg \
    procps \
    vim \
    git \
    unzip \
    libzip-dev \
    libpq-dev \
    && docker-php-ext-install zip pdo_pgsql

# intl
RUN apt-get install -y libicu-dev \
  && docker-php-ext-configure intl \
  && docker-php-ext-install intl

# gd
RUN apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng-dev && \
docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ && \
docker-php-ext-install gd

# pcov
RUN pecl install pcov && docker-php-ext-enable pcov

# Composer
RUN curl https://getcomposer.org/installer > /tmp/composer-install.php
RUN php /tmp/composer-install.php
RUN rm -rf /tmp/composer-install.php
RUN mv composer.phar /usr/local/bin/composer

ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_HOME /composer
ENV PATH $PATH:/composer/vendor/bin
RUN composer config --global process-timeout 3600
RUN composer global require "laravel/installer"

# Копирование конфигурационных файлов
COPY .docker/api/php/php.prod.ini /usr/local/etc/php/php.ini
COPY .docker/api/php/php-fpm.prod.conf /usr/local/etc/php-fpm.d/www.conf
COPY .docker/api/nginx/nginx.prod.conf /etc/nginx/nginx.conf
COPY .docker/api/nginx/default.prod.conf /etc/nginx/conf.d/default.conf
COPY .docker/api/entrypoint.prod.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Настройка рабочей директории
WORKDIR /var/www

# Копирование файлов приложения
COPY --chown=app:app ./api .

# Установка зависимостей Composer
RUN composer install --no-dev --optimize-autoloader --no-interaction --no-progress

# Создание необходимых директорий
RUN mkdir -p /var/www/storage/logs \
    && mkdir -p /var/www/storage/framework/cache \
    && mkdir -p /var/www/storage/framework/sessions \
    && mkdir -p /var/www/storage/framework/views \
    && mkdir -p /var/www/bootstrap/cache

# Открытие портов
EXPOSE 80

# Запуск приложения
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
